spring:
  application:
    name: matching-engine
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:redpanda:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:matching-engine}
      max-poll-records: 100
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: com.tradestream.*
        spring.json.use.type.headers: false
    listener:
      ack-mode: MANUAL
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED:true}
    locations: ${SPRING_FLYWAY_LOCATIONS:classpath:db/migration}
    baseline-on-migrate: true
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.time_zone: UTC

server:
  port: ${SERVER_PORT:8086}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

tradestream:
  topics:
    orderPlaced: ${KAFKA_TOPIC_ORDER_PLACED:order.placed.v1}
    orderCancelled: ${KAFKA_TOPIC_ORDER_CANCELLED:order.cancelled.v1}
    tradeExecuted: ${KAFKA_TOPIC_TRADE_EXECUTED:trade.executed.v1}

logging:
  level:
    com.tradestream.matching_engine.stream: INFO