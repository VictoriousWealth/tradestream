spring:
  application:
    name: transaction-processor
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    properties:
      hibernate.jdbc.time_zone: UTC
    open-in-view: false
  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED:true}
    locations: ${SPRING_FLYWAY_LOCATIONS:classpath:db/migration}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:redpanda:9092}

    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:transaction_processor-journal}
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.tradestream.*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.tradestream.transaction_processor.consumer.TradeExecutedEvent

    listener:
      ack-mode: RECORD

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
  # Graceful shutdown for Kafka listeners
  lifecycle:
    timeout-per-shutdown-phase: 20s

server:
  port: ${SERVER_PORT:8084}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      probes:
        enabled: true

# App-specific settings
orders:
  baseUrl: ${ORDERS_BASE_URL:http://orders-service:8085}

tradestream:
  topics:
    tradeExecuted: ${KAFKA_TOPIC_TRADE_EXECUTED:trade.executed.v1}
    transactionRecorded: ${KAFKA_TOPIC_TRANSACTION_RECORDED:transaction.recorded.v1}

logging:
  level:
    root: INFO
    org.apache.kafka.clients.consumer: WARN
    org.springframework.kafka.listener: INFO
